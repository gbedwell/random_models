dplyr::mutate(sample = "nasb")
spread.pfit.uw.mb <- spread.pfit.uw.mb %>%
dplyr::mutate(sample = "mb")
spread.pfit.uw <- rbind(spread.pfit.uw.random, spread.pfit.uw.nasb, spread.pfit.uw.mb)
spread.pfit.uw$sample <- factor(spread.pfit.uw$sample, levels = c("random","nasb","mb"))
resid.uw.params.random <- resid.uw.params.random %>%
as_data_frame() %>%
dplyr::mutate(sample = "random") %>%
tibble::add_column(parameter = c("N","a","k")) %>%
dplyr::select(sample, parameter, Estimate) %>%
tidyr::pivot_wider(names_from = parameter, values_from = Estimate)
resid.uw.params.nasb <- resid.uw.params.nasb %>%
as_data_frame() %>%
dplyr::mutate(sample = "nasb") %>%
tibble::add_column(parameter = c("N","a","k")) %>%
dplyr::select(sample, parameter, Estimate) %>%
tidyr::pivot_wider(names_from = parameter, values_from = Estimate)
resid.uw.params.mb <- resid.uw.params.mb %>%
as_data_frame() %>%
dplyr::mutate(sample = "mb") %>%
tibble::add_column(parameter = c("N","a","k")) %>%
dplyr::select(sample, parameter, Estimate) %>%
tidyr::pivot_wider(names_from = parameter, values_from = Estimate)
resid.uw.params <- rbind(resid.uw.params.random, resid.uw.params.nasb, resid.uw.params.mb)
resid.uw.params$sample <- factor(resid.uw.params$sample, levels=c("random","nasb","mb"))
uw.pred <- spread.pfit.uw %>%
dplyr::inner_join(., resid.uw.params , by="sample") %>%
dplyr::mutate(uw.pred = N*total.sites^a + k) %>%
dplyr::select(sample, total.sites, uw.pred)
uw.pred$sample <- factor(uw.pred$sample, levels=c("random","nasb","mb"))
uw.plot <- ggplot(spread.pfit.uw, aes(fill=sample)) +
geom_point(aes(x=total.sites/1000, y=spread.resid.uw), color="black", size=2.5, shape=21) +
geom_point(aes(x=total.sites/1000, y=spread.resid.uw), size=2.5, alpha=0.2) +
scale_fill_manual(values = c("darkgreen","darkred","navyblue")) +
scale_color_manual(values = c("darkgreen","darkred","navyblue")) +
geom_line(data = uw.pred,
aes(x=total.sites/1000,
y=uw.pred,
color = sample),
size=0.6) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18),
legend.position="none") +
scale_x_continuous(labels = comma) +
labs(y = "Spread UW") +
xlab(expression(paste("Total Sites x ", 10^3)))
#uw.plot
zero.points.random <- zero.points.random %>%
dplyr::mutate(sample = "random")
zero.points.nasb <- zero.points.nasb %>%
dplyr::mutate(sample = "nasb")
zero.points.mb <- zero.points.mb %>%
dplyr::mutate(sample = "mb")
zero.points <- rbind(zero.points.random, zero.points.nasb, zero.points.mb)
zero.points$sample <- factor(zero.points$sample, levels = c("random","nasb","mb"))
zero.fit.params.random <- zero.fit.params.random %>%
as_data_frame() %>%
dplyr::mutate(sample = "random") %>%
tibble::add_column(parameter = c("N","a","k")) %>%
dplyr::select(sample, parameter, Estimate) %>%
tidyr::pivot_wider(names_from = parameter, values_from = Estimate)
zero.fit.params.nasb <- zero.fit.params.nasb %>%
as_data_frame() %>%
dplyr::mutate(sample = "nasb") %>%
tibble::add_column(parameter = c("N","a","k")) %>%
dplyr::select(sample, parameter, Estimate) %>%
tidyr::pivot_wider(names_from = parameter, values_from = Estimate)
zero.fit.params.mb <- zero.fit.params.mb %>%
as_data_frame() %>%
dplyr::mutate(sample = "mb") %>%
tibble::add_column(parameter = c("N","a","k")) %>%
dplyr::select(sample, parameter, Estimate) %>%
tidyr::pivot_wider(names_from = parameter, values_from = Estimate)
zero.fit.params <- rbind(zero.fit.params.random, zero.fit.params.nasb, zero.fit.params.mb)
zero.fit.params$sample <- factor(zero.fit.params$sample, levels=c("random","nasb","mb"))
zero.pred <- zero.points %>%
dplyr::inner_join(., zero.fit.params , by="sample") %>%
dplyr::mutate(zero.pred = N*total.sites^a + k) %>%
dplyr::select(sample, total.sites, zero.pred)
zero.pred$sample <- factor(zero.pred$sample, levels=c("random","nasb","mb"))
zeroes.plot <- ggplot(zero.points, aes(fill=sample)) +
geom_point(aes(x=total.sites/1000, y=x.uw/1000000), color="black", size=2.5, shape=21) +
geom_point(aes(x=total.sites/1000, y=x.uw/1000000), size=2.5, alpha=0.2) +
scale_fill_manual(values = c("darkgreen","darkred","navyblue"),
labels = c("Random","NheI/AvrII/SpeI/BamHI","MseI/BglII")) +
scale_color_manual(values = c("darkgreen","darkred","navyblue")) +
geom_line(data = zero.pred,
aes(x=total.sites/1000,
y=zero.pred/1000000,
color = sample),
size=0.6,
show.legend = FALSE) +
theme_bw() +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18),
legend.position="none") +
scale_x_continuous(labels = comma) +
scale_y_continuous(limits = c(0,0.4)) +
labs(y = "Zero Point (Mbp)") +
xlab(expression(paste("Total Sites x ", 10^3)))
#zeroes.plot
legend <- get_legend(
zeroes.plot +
guides(fill = guide_legend(nrow = 1,
"Fragmentation Method",
title.position = "top",
title.hjust=0.5,
override.aes = list(size = 3))) +
theme(legend.position = "top",
legend.title=element_text(size=12),
legend.text=element_text(size=12)))
row1 <- cowplot::plot_grid(uw.plot, zeroes.plot, mean.slope.fit.plot,
labels = c("A","B","C"),
label_size = 16,
ncol = 3)
row2 <- cowplot::plot_grid(mean.int.fit.plot, spread.N.plot, spread.a.fit.plot,
labels = c("D","E","F"),
label_size = 16,
ncol = 3)
global.fits <- plot_grid(legend, row1, row2,
ncol = 1,
rel_heights = c(0.2,1,1))
ggsave(filename=paste0(figure.directory, "global_fits_combo.tiff"), plot=global.fits, height=8,
width=14, units="in", device="tiff")
load(paste0(getwd(), "/model_files/random_outlier_plot_df.RData"))
load(paste0(getwd(), "/model_files/nasb_outlier_plot_df.RData"))
load(paste0(getwd(), "/model_files/mb_outlier_plot_df.RData"))
rm(frag.directory)
random.outliers <- random.outliers %>%
dplyr::mutate(sample = "random")
nasb.outliers <- nasb.outliers %>%
dplyr::mutate(sample = "nasb")
mb.outliers <- mb.outliers %>%
dplyr::mutate(sample = "mb")
#outliers <- rbind(random.outliers, nasb.outliers, mb.outliers)
random.outlier.plot <- ggplot(random.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=fpr, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(-0.0001,0.005)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "False Positive Rate") +
xlab(expression(paste("Total Sites x ", 10^3)))
#random.outlier.plot
n.random.outlier.plot <- ggplot(random.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=n.outliers, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "Number of Outliers") +
xlab(expression(paste("Total Sites x ", 10^3)))
#n.random.outlier.plot
nasb.outlier.plot <- ggplot(nasb.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=fpr, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(-0.0001,0.005)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "False Positive Rate") +
xlab(expression(paste("Total Sites x ", 10^3)))
#nasb.outlier.plot
n.nasb.outlier.plot <- ggplot(random.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=n.outliers, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "Number of Outliers") +
xlab(expression(paste("Total Sites x ", 10^3)))
#n.nasb.outlier.plot
mb.outlier.plot <- ggplot(mb.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=fpr, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(-0.0001,0.005)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "False Positive Rate") +
xlab(expression(paste("Total Sites x ", 10^3)))
#mb.outlier.plot
n.mb.outlier.plot <- ggplot(mb.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=n.outliers, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "Number of Outliers") +
xlab(expression(paste("Total Sites x ", 10^3)))
#n.mb.outlier.plot
random.outliers.title <- ggdraw() +
draw_label(
"Random Fragmentation",
fontface = 'bold',
size = 16,
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
random.outliers.combo <- cowplot::plot_grid(random.outlier.plot, n.random.outlier.plot,
labels = c("A","B"),
label_size = 16,
ncol = 2)
random.outliers.combo <- plot_grid(
random.outliers.title, random.outliers.combo,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
nasb.outliers.title <- ggdraw() +
draw_label(
"NheI/AvrII/SpeI/BamHI Fragmentation",
fontface = 'bold',
size = 16,
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
nasb.outliers.combo <- cowplot::plot_grid(nasb.outlier.plot, n.nasb.outlier.plot,
labels = c("C","D"),
label_size = 16,
ncol = 2)
nasb.outliers.combo <- plot_grid(
nasb.outliers.title, nasb.outliers.combo,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
mb.outliers.title <- ggdraw() +
draw_label(
"MseI/BglII Fragmentation",
fontface = 'bold',
size = 16,
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
mb.outliers.combo <- cowplot::plot_grid(mb.outlier.plot, n.mb.outlier.plot,
labels = c("E","F"),
label_size = 16,
ncol = 2)
mb.outliers.combo <- plot_grid(
mb.outliers.title, mb.outliers.combo,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
outlier.legend <- get_legend(
n.mb.outlier.plot +
guides(fill = guide_legend(nrow = 1,
"Outlier Type",
title.position = "top",
title.hjust=0.5,
override.aes = list(size = 6))) +
theme(legend.position = "top",
legend.title=element_text(size=20),
legend.text=element_text(size=20)))
combo.outlier.fits <- cowplot::plot_grid(outlier.legend,
random.outliers.combo,
nasb.outliers.combo,
mb.outliers.combo,
nrow = 4,
ncol=1,
rel_heights = c(0.2,1,1,1))
ggsave(filename=paste0(figure.directory, "outlifer_fits_combo.tiff"), plot=combo.outlier.fits, height=16,
width=22, units="in", device="tiff")
save.image(file = paste0("~/Documents/scripts/bioinformatics/int_sites/int_site_analysis/models/model_files",
"/combined_plots.RData"), safe = F)
n.nasb.outlier.plot <- ggplot(nasb.outliers, aes(x=forcats::as_factor(scales::comma(total.sites/1000, accuracy = 1)),
y=n.outliers, fill=outlier.type)) +
geom_boxplot(aes(fill=outlier.type), width=0.5, size=0.4, outlier.shape = NA, show.legend = FALSE, alpha = 0.6) +
geom_point(aes(fill=outlier.type),
position = position_jitterdodge(seed=123),
color="black", shape=21) +
scale_fill_manual("Outlier Type - Random",
values = c("navyblue", "darkred"),
labels=c(" Upper Outliers", " Lower Outliers"),
guide = guide_legend(reverse = FALSE,
title.position = "top",
nrow = 1,
title.hjust=0.5,
"Outlier Type",
override.aes = list(size = 3))) +
scale_x_discrete() +
scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(legend.title = element_text(size=12),
legend.position="none",
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.text = element_text(size=12),
legend.box.margin=margin(-10,-10,-10,-10),
axis.text=element_text(size=14),
axis.title=element_text(size=18)) +
labs(y = "Number of Outliers") +
xlab(expression(paste("Total Sites x ", 10^3)))
#n.nasb.outlier.plot
random.outliers.title <- ggdraw() +
draw_label(
"Random Fragmentation",
fontface = 'bold',
size = 16,
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
random.outliers.combo <- cowplot::plot_grid(random.outlier.plot, n.random.outlier.plot,
labels = c("A","B"),
label_size = 16,
ncol = 2)
random.outliers.combo <- plot_grid(
random.outliers.title, random.outliers.combo,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
nasb.outliers.title <- ggdraw() +
draw_label(
"NheI/AvrII/SpeI/BamHI Fragmentation",
fontface = 'bold',
size = 16,
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
nasb.outliers.combo <- cowplot::plot_grid(nasb.outlier.plot, n.nasb.outlier.plot,
labels = c("C","D"),
label_size = 16,
ncol = 2)
nasb.outliers.combo <- plot_grid(
nasb.outliers.title, nasb.outliers.combo,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
mb.outliers.title <- ggdraw() +
draw_label(
"MseI/BglII Fragmentation",
fontface = 'bold',
size = 16,
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
mb.outliers.combo <- cowplot::plot_grid(mb.outlier.plot, n.mb.outlier.plot,
labels = c("E","F"),
label_size = 16,
ncol = 2)
mb.outliers.combo <- plot_grid(
mb.outliers.title, mb.outliers.combo,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
outlier.legend <- get_legend(
n.mb.outlier.plot +
guides(fill = guide_legend(nrow = 1,
"Outlier Type",
title.position = "top",
title.hjust=0.5,
override.aes = list(size = 6))) +
theme(legend.position = "top",
legend.title=element_text(size=20),
legend.text=element_text(size=20)))
combo.outlier.fits <- cowplot::plot_grid(outlier.legend,
random.outliers.combo,
nasb.outliers.combo,
mb.outliers.combo,
nrow = 4,
ncol=1,
rel_heights = c(0.2,1,1,1))
ggsave(filename=paste0(figure.directory, "outlifer_fits_combo.tiff"), plot=combo.outlier.fits, height=16,
width=22, units="in", device="tiff")
save.image(file = paste0("~/Documents/scripts/bioinformatics/int_sites/int_site_analysis/models/model_files",
"/combined_plots.RData"), safe = F)
